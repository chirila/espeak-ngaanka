
// Phonemes for bardi
// This inherits from ph_hindi
// Modeled on ph_gujarati and ph_hawaiian


phoneme a
  vwl starttype #a endtype #a
  length 130
  FMT(vwl_lv/a, 100)
endphoneme

phoneme a:
  vwl starttype #a endtype #a
  length 310
  lng
  FMT(vwl_lv/aa, 90)
endphoneme

phoneme i
  vwl starttype #i endtype #i
  length 120
  FMT(vwl_lv/i, 110)
endphoneme

phoneme i:
  vwl starttype #i endtype #i
  length 280
  FMT(vwl_lv/ii, 90)
endphoneme

phoneme o
  vwl starttype #o endtype #o
  length 120
  FMT(vwl_lv/o, 90)
endphoneme

phoneme u
  vwl starttype #u endtype #u
  length 120
  FMT(vwl_lv/u, 100)
endphoneme

phoneme u:
  vwl starttype #u endtype #u
  length 300
  FMT(vwl_lv/uu, 90)
endphoneme

phoneme ai
  vwl starttype #a endtype #i
  length 280
  lng
  FMT(vdiph/aai, 100)
endphoneme

phoneme au
  vwl starttype #a endtype #u
  length 300
  lng
  FMT(vdiph/aau, 100)
endphoneme


phoneme k
  vls vel stp
  lengthmod 2
  voicingswitch g
  Vowelin f1=0  f2=2300 200 400  f3=-100 80
  Vowelout f1=0 f2=2300 300 400  f3=-100 80  rms=20
  IF nextPh(isPause2) THEN
    WAV(ustop/k_)
  ENDIF
  IF nextPh(#i) OR nextPh(l^) THEN
    WAV(ustop/ki)
  ENDIF
  IF nextPh(l) THEN
    WAV(ustop/kl)
  ENDIF
  WAV(ustop/k_unasp, 60)
endphoneme

phoneme l
  liquid

  IF nextPh(isNotVowel) THEN
    PrevVowelEndings
      VowelEnding(l/L1_@L)
      VowelEnding(l/L1_aL)
      VowelEnding(l/L1_eL)
      VowelEnding(l/L1_iL)
      VowelEnding(l/L1_oL)
      VowelEnding(l/L1_uL)
    EndSwitch

    FMT(l/l_)
    RETURN
  ENDIF

  CALL vowelstart_l

  IF prevPh(a) OR prevPh(a:) THEN
    VowelEnding(l/xl, 20)
  ELSEIF prevPh(isVowel) THEN
    VowelEnding(l/xl, 10)
  ENDIF

  IF prevPh(isPause) THEN
    FMT(l/_l)
  ENDIF

  IF prevPh(t) THEN
    FMT(l/tl)
  ENDIF

  IF prevPh(l/) THEN
    FMT(l/l_long)
  ENDIF

  FMT(l/l)
endphoneme

phoneme m
  vcd blb nas
  Vowelout f1=2  f2=1000 -500 -350  f3=-200 80 brk
  lengthmod 4

  IF KlattSynth THEN
    Vowelin  f1=0  f2=1000 -50 -200  f3=-200 80
    IF nextPh(isPause2) THEN
      FMT(klatt/m_)
    ENDIF
    FMT(klatt/m)
  ENDIF

  NextVowelStarts
    VowelStart(m/m@)
    VowelStart(m/ma)
    VowelStart(m/me)
    VowelStart(m/mi)
    VowelStart(m/mo)
    VowelStart(m/mu)
  EndSwitch

  IF prevPh(isNotVowel) AND nextPhW(isLiquid) THEN
    FMT(m/mj)
  ELIF prevPh(isPause) THEN
    FMT(m/_m)
  ELIF nextPh(isNotVowel) THEN
    FMT(m/m_)
  ELIF nextPh(m) THEN
    FMT(m/mj)
  ENDIF
endphoneme


// CONSONANTS
//===========

phoneme v        // approximant, not fricative
  import_phoneme base1/v#
  voicingswitch f
endphoneme


phoneme H       // use for full "h"
  import_phoneme base1/h
endphoneme



// bilabial plosives
//==================

phoneme p
  import_phoneme consonants/p-
endphoneme


phoneme p#
  import_phoneme consonants/ph
endphoneme


phoneme  b       // this is [b]
  import_phoneme base1/b
endphoneme


phoneme b#
  vcd blb stp
  lengthmod 5
  voicingswitch p#
  Vowelin  f1=0  f2=1000 -50 -100  f3=-200 80
  Vowelout f1=0  f2=1000 -500 -350  f3=-300 80 rms=30

  IF PreVoicing THEN
    FMT(b/xb)
  ENDIF

  FMT( b/b@2) addWav(ustop/p_asp, 70)
endphoneme




// dental plosives
//==================

phoneme t        // dental variant of /t/
  import_phoneme base1/t[
  voicingswitch d
endphoneme


phoneme t#        // dental variant of /t/
  vls dnt stp
  lengthmod 2
  voicingswitch d
  Vowelin f1=0  f2=1500 -300 300  f3=-100 80  amp=16
  Vowelout f1=0 f2=1500 -300 250  f3=-100 80  rms=20
  IF nextPh(isPause2) THEN
    WAV(ustop/t_dnt, 35)
  ENDIF
  WAV(ustop/t_dnt, 50)
endphoneme


phoneme d       // dental variant of /d/
  import_phoneme base1/d[
  voicingswitch t
endphoneme


phoneme d#
  vcd dnt stp
  lengthmod 5
  voicingswitch t#
  Vowelin f1=0  f2=1500 -300 300  f3=-100 80
  Vowelout f1=0 f2=1500 -300 250  f3=-100 80  rms=20

  IF PreVoicing THEN
    FMT(d/xd)
  ENDIF

  FMT(d/xd3) addWav(ustop/t_dnt, 40)
endphoneme




// retroflex plosives
//===================

phoneme t.
  vls rfx stp
  lengthmod 2
  ipa ʈ
  voicingswitch d.
  Vowelin f1=0  f2=1800 -300 300  f3=-400 80
  Vowelout f1=0 f2=1800 -300 250  f3=-400 80  rms=20 colr=2
  WAV(ustop/t_short)
endphoneme

phoneme t.#
  vls rfx stp
  lengthmod 2
  ipa ʈU+02B0
  voicingswitch d.#
  Vowelin f1=0  f2=1800 -300 300  f3=-200 80
  Vowelout f1=0 f2=1800 -300 250  f3=-400 80  rms=20 colr=2

  IF nextPhW(t.#) THEN
    ChangePhoneme(t.)
  ENDIF
  WAV(ustop/th_rfx2, 80)
endphoneme

phoneme d.
  vcd rfx stp
  lengthmod 5
  voicingswitch t.
  ipa ɖ
  Vowelin f1=1  f2=1800 -300 300  f3=-400 80
  Vowelout f1=1 f2=1800 -300 300  f3=-400 80 colr=2

  IF PreVoicing THEN
    FMT(d/xdr)
  ENDIF

  IF nextPh(isPause2) THEN
    FMT(d/d_) addWav(x/d_)
  ENDIF

  FMT(d/dr) addWav(x/d)
endphoneme


phoneme d.#
  vcd rfx stp
  lengthmod 5
  ipa ɖU+02B0
  voicingswitch t.#
  Vowelin f1=1  f2=1800 -300 300  f3=-400 80
  Vowelout f1=1 f2=1800 -300 300  f3=-400 80 colr=2

  IF PreVoicing THEN
    FMT(d/xdr)
  ENDIF

  FMT(d/dr) addWav(ustop/t)
//  FMT(d/dr) addWav(ustop/th_rfx)
endphoneme




// palatal plosives
//=================

// also try [tS] and [dZ]

phoneme c
  vls pla afr sib
  voicingswitch dZ
  lengthmod 2
  Vowelin f1=0  f2=2300 200 400  f3=-100 80

  IF nextPh(isPause2) THEN
    WAV(ustop/tsh_)
  ENDIF
  WAV(ustop/tsh_unasp)
endphoneme



phoneme c#
  CALL base1/tS;
  ipa cU+02B0
endphoneme


phoneme J
  import_phoneme base1/J
endphoneme


phoneme J#
  vcd pal afr sib
  lengthmod 5
  voicingswitch c#
  Vowelin f1=0  f2=2700 400 600  f3=300 80 rate len=70
  Vowelout f1=0 f2=2700 400 600  f3=300 80 colr=1

  IF PreVoicing THEN
    FMT(dzh/xdz_pzd)
  ENDIF

  FMT(dzh/xdz_pzd) addWav(ustop/ts_pzd)
endphoneme





// velar plosives
//==================


phoneme k
  import_phoneme consonants/k-
  voicingswitch g
endphoneme

phoneme k#
  import_phoneme consonants/k#
  voicingswitch g#
endphoneme


phoneme g
  import_phoneme base1/g
  voicingswitch k
endphoneme


phoneme g#
  vcd dnt stp
  lengthmod 5
  voicingswitch k#
  Vowelin f1=1  f2=2300 200 300  f3=-150 80  rms=20
  Vowelout f1=0 f2=2300 300 400  f3=-150 80  rms=20

  IF PreVoicing THEN
    FMT(g2/xg)
  ENDIF

  IF nextPh(isPause2) THEN
    FMT(g2/xg) addWav(ustop/k_asp, 35)
  ENDIF
  FMT(g2/xg) addWav(ustop/k_asp, 50)
endphoneme

//================

phoneme #X2  // click, use for indicating combining long vowels
  vls alv frc sib
  lengthmod 3
  WAV(ustop/percus02, 60)
endphoneme


phoneme r
  liquid rhotic
  lengthmod 3

  IF thisPh(isWordEnd) THEN
    CALL base1/r/
  ELSE
    IF prevPhW(isVowel) THEN
      IF nextPhW(isNotVowel) THEN
        IF nextPhW(isUStop) OR nextPhW(isVStop) THEN
          ChangePhoneme(*)
        ENDIF
      ENDIF

      IF nextPhW(V) THEN    // [V] may be removed by ChangePhoneme(NULL)
        IF next2PhW(isUStop) OR next2PhW(isVStop) THEN
          ChangePhoneme(*)
        ENDIF
      ELSE
        IF nextPhW(isVowel) THEN
          ChangePhoneme(*)
        ENDIF
      ENDIF
    ENDIF

    CALL base1/r
  ENDIF
  ipa ɾ
endphoneme

